<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zttek.thesis.modules.mapper.UserMapper">
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" >
    <property name="timeToIdleSeconds" value="3600"/><!--1 hour-->
    <property name="timeToLiveSeconds" value="3600"/><!--1 hour-->
    <property name="maxEntriesLocalHeap" value="1000"/>
    <property name="maxEntriesLocalDisk" value="10000000"/>
    <property name="memoryStoreEvictionPolicy" value="LRU"/>
  </cache>
  <resultMap id="BaseResultMap" type="cn.zttek.thesis.modules.model.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="orgid" property="orgid" jdbcType="BIGINT" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="type" property="type" typeHandler="cn.zttek.thesis.common.mybatis.EnumHandler" />
    <result column="valid" jdbcType="BIT" property="valid" />
    <result column="cdate" jdbcType="TIMESTAMP" property="cdate" />
    <result column="mdate" jdbcType="TIMESTAMP" property="mdate" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="cn.zttek.thesis.modules.model.User" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user (orgid, username, password, account,
      type, valid, cdate, mdate
      )
    values (#{orgid, jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR},
      #{type, typeHandler=cn.zttek.thesis.common.mybatis.EnumHandler}, #{valid,jdbcType=BIT}, #{cdate,jdbcType=TIMESTAMP}, #{mdate,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.zttek.thesis.modules.model.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    set
      orgid = #{orgid, jdbcType=BIGINT},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      type = #{type, typeHandler=cn.zttek.thesis.common.mybatis.EnumHandler},
      valid = #{valid,jdbcType=BIT},
      cdate = #{cdate,jdbcType=TIMESTAMP},
      mdate = #{mdate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, orgid, username, password, account, type, valid, cdate, mdate
    from user
    where id = #{id,jdbcType=BIGINT} and valid = 1
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, orgid, username, password, account, type, valid, cdate, mdate
    from user
    where valid = 1
  </select>
    <!-- =========================以下为手动添加===================================== -->
    <sql id="Base_Column_List" >
        id, orgid, username, password, account, type, valid, cdate, mdate
    </sql>
    <select id="search" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user where valid = 1
        <if test="keywords != null and keywords != ''">
            and (account like CONCAT('%',#{keywords},'%') or username like CONCAT('%',#{keywords},'%'))
        </if>
        <if test="type != null">
            and type = #{type, typeHandler=cn.zttek.thesis.common.mybatis.EnumHandler}
        </if>
        <if test="orgid">
            and orgid = #{orgid}
        </if>
        order by account asc
    </select>

    <select id="getSuperRoleId" resultType="java.lang.Long">
        select ur.rid from user_role ur, user u
        where u.valid = 1 and u.id = ur.uid
        and u.type = '${@cn.zttek.thesis.modules.enums.UserType@SUPER.getId()}'
    </select>

    <select id="countUsed" parameterType="java.lang.Long" resultType="java.lang.Long">
        select count(rid) from user_role where rid = #{rid}
    </select>

    <select id="getByAccount" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user u where u.valid = 1 and u.account = #{account}
    </select>

    <select id="getRoles" parameterType="java.lang.Long" resultMap="cn.zttek.thesis.modules.mapper.RoleMapper.BaseResultMap">
        select r.*
        from user_role ur, role r where ur.uid = #{uid} and ur.rid = r.id
    </select>

    <delete id="deleteUserRoles" parameterType="java.lang.Long">
        delete from user_role where uid = #{uid}
    </delete>
    <insert id="addUserRoles">
        insert into user_role(uid, rid)
        values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{uid}, #{item})
        </foreach>
    </insert>
    <!--<delete id="deleteUserRole">-->
        <!--delete from user_role where uid = #{uid} and rid = #{rid}-->
    <!--</delete>-->
    <!--<insert id="addUserRole">-->
        <!--insert into user_role(uid, rid)-->
        <!--values (#{uid}, #{rid})-->
    <!--</insert>-->

    <!-- =========================以下为用户信息的相关操作===================================== -->
    <resultMap id="InfoResultMap" type="cn.zttek.thesis.modules.model.User">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="account" jdbcType="VARCHAR" property="account" />
        <result column="type" property="type" typeHandler="cn.zttek.thesis.common.mybatis.EnumHandler" />
        <result column="valid" jdbcType="BIT" property="valid" />
        <result column="cdate" jdbcType="TIMESTAMP" property="cdate" />
        <result column="mdate" jdbcType="TIMESTAMP" property="mdate" />
        <association property="info" column="uid" javaType="cn.zttek.thesis.modules.model.UserInfo">
            <result column="uid" property="uid" jdbcType="BIGINT" />
            <result column="gender" property="gender" jdbcType="VARCHAR" />
            <result column="phone" property="phone" jdbcType="VARCHAR" />
            <result column="email" property="email" jdbcType="VARCHAR" />
            <result column="inscomm" property="inscomm" jdbcType="VARCHAR" />
            <result column="room" property="room" jdbcType="VARCHAR" />
            <result column="tid" property="tid" jdbcType="BIGINT" />
            <result column="major" property="major" jdbcType="VARCHAR" />
            <result column="clazz" property="clazz" jdbcType="VARCHAR" />
            <result column="grade" property="grade" jdbcType="VARCHAR" />
        </association>
    </resultMap>
    <sql id="User_Column_List" >
        u.id, u.orgid, u.username, u.password, u.account, u.type, u.valid, u.cdate, u.mdate
    </sql>
    <sql id="Info_Column_List" >
        ui.uid, ui.gender, ui.phone, ui.email, ui.inscomm, ui.room, ui.tid, ui.major, ui.clazz, ui.grade
    </sql>
    <select id="searchDetail" resultMap="InfoResultMap">
        select
        <include refid="User_Column_List" />
        ,
        <include refid="Info_Column_List" />
        from user u, user_info ui
        <!--根据是否被选择来查询用户信息-->
        <if test="selected == true"><!--如果条件已选择的，则需要关联中间表进行查询-->
            <if test='type.name() == "TEACHER"'>
                , project_teacher pt where u.valid = 1 and u.id = pt.teacherid and pt.projectid = #{projid}
            </if>
            <if test='type.name() == "STUDENT"'>
                , project_student ps where u.valid = 1 and u.id = ps.studentid and ps.projectid = #{projid}
            </if>
        </if>
        <if test="selected == false"><!--如果条件是未选择的，则需要排除在中间表中的数据-->
            <if test='type.name() == "TEACHER"'>
                where u.valid = 1 and not exists (select 1 from project_teacher pt where u.id = pt.teacherid and pt.projectid = #{projid})
            </if>
            <if test='type.name() == "STUDENT"'>
                where u.valid = 1 and not exists (select 1 from project_student ps where u.id = ps.studentid)
            </if>
        </if>
        <if test="selected == null">
            where u.valid = 1
        </if>
        and u.id = ui.uid
        <if test="keywords != null and keywords != ''">
            and (u.account like CONCAT('%',#{keywords},'%') or u.username like CONCAT('%',#{keywords},'%'))
        </if>
        <if test="type != null">
            and u.type = #{type, typeHandler=cn.zttek.thesis.common.mybatis.EnumHandler}
        </if>
        <if test="orgid">
            and u.orgid = #{orgid}
        </if>
        <if test="major != null">
            and ui.major = #{major}
        </if>
        <if test="grade != null">
            and ui.grade = #{grade}
        </if>
        <if test="clazz != null">
            and ui.clazz = #{clazz}
        </if>
        order by u.account desc, u.mdate desc
    </select>


    <insert id="addProjectUsers">
        insert into
        <if test='type.name() == "TEACHER"'>
            project_teacher (projectid, teacherid)
        </if>
        <if test='type.name() == "STUDENT"'>
            project_student (projectid, studentid)
        </if>
        values
        <foreach collection="uids" item="uid" index="index" separator="," >
            (#{projid}, #{uid})
        </foreach>
    </insert>

    <delete id="deleteProjectUsers">
        delete from project_${type}
        where projectid = #{projid} and ${type}id in (
            <foreach collection="uids" item="uid" index="index" separator="," >
                #{uid}
            </foreach>
        )
    </delete>


    <select id="getByProjectAndAccount" resultMap="BaseResultMap">
        SELECT
        <include refid="User_Column_List" />
        FROM user u, project_student ps
        WHERE u.valid = 1
        AND u.id = ps.studentid
        AND ps.projectid = #{projid}
        AND u.account = #{stuno}
    </select>


    <resultMap id="GuideStudMap" type="cn.zttek.thesis.modules.expand.GuideStudent">
        <id column="uid" jdbcType="BIGINT" property="id" />
        <id column="tid" jdbcType="BIGINT" property="thesisid" />
        <result column="topic" property="topic" jdbcType="VARCHAR" />
        <result column="account" jdbcType="VARCHAR" property="account" />
        <result column="username" jdbcType="VARCHAR" property="stuname" />
    </resultMap>
    <select id="listStudentByGuide" resultMap="GuideStudMap">
        select u.id uid,tt.topic,u.account,u.username as stuname,tt.id tid
        from  thesis_teacher tt left JOIN user u on tt.studentid=u.id
        where tt.projid = #{projid}
        and tt.studentid >0 and tt.checked = true
        and tt.teacherid = #{teacherid}
    </select>


</mapper>